#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>

#define MAX_FRAMES 3 // Number of frames in memory

// Function to initialize an empty page frame array and reference bits
void initializeFrames(int frames[], int reference_bits[], int size) {
    for (int i = 0; i < size; i++) {
        frames[i] = -1; // -1 indicates an empty frame
        reference_bits[i] = 0; // Initialize reference bits to 0
    }
}

// Function to check if a page is present in the frames array
bool isPagePresent(int frames[], int size, int page) {
    for (int i = 0; i < size; i++) {
        if (frames[i] == page) {
            return true;
        }
    }
    return false;
}

// Function to implement Clock page replacement algorithm
void clockPageReplacement(int pages[], int num_pages) {
    int frames[MAX_FRAMES]; // Array to hold page frames in memory
    int reference_bits[MAX_FRAMES]; // Array to hold reference bits for each page frame
    int page_faults = 0;
    int pointer = 0; // Clock hand pointer

    initializeFrames(frames, reference_bits, MAX_FRAMES);

    printf("Page\tFrames\n");
    for (int i = 0; i < num_pages; i++) {
        int currentPage = pages[i];
        printf("%d\t", currentPage);

        // If the page is not already in memory, perform page replacement
        if (!isPagePresent(frames, MAX_FRAMES, currentPage)) {
            while (reference_bits[pointer] == 1) {
                reference_bits[pointer] = 0;
                pointer = (pointer + 1) % MAX_FRAMES;
            }
            frames[pointer] = currentPage;
            reference_bits[pointer] = 1;
            pointer = (pointer + 1) % MAX_FRAMES;
            page_faults++;
        } else {
            // If the page is already in memory, update its reference bit
            for (int j = 0; j < MAX_FRAMES; j++) {
                if (frames[j] == currentPage) {
                    reference_bits[j] = 1; // Update reference bit
                    break;
                }
            }
        }

        // Print the current frames in memory
        for (int j = 0; j < MAX_FRAMES; j++) {
            if (frames[j] != -1) {
                printf("%d ", frames[j]);
            } else {
                printf(". ");
            }
        }
        printf("\n");
    }

    printf("Total Page Faults: %d\n", page_faults);
}

int main() {
    // Example array of page references
    int pages[] = {7, 0, 1, 2, 0, 3, 0, 4, 2, 3, 0, 3, 2};
    int num_pages = sizeof(pages) / sizeof(pages[0]);

    clockPageReplacement(pages, num_pages);

    return 0;
}